name: Release Update

env:
  releases: ${{ "{\"include\":[{\"modifier\":\"steam\", \"assetName\":\"steam.jar\"}, {\"modifier\":\"beta\", \"assetName\":\"desktop-release.jar\"}]}" }}
on:
  push:
    branches: custom-client
  workflow_dispatch:
    branches: custom-client


jobs:
  gradleBuild:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.create_release.outputs.upload_url }}
    strategy:
      matrix: ${{fromJson(releases)}} # build with multiple versionModifier (modifier in version.java) arguments

    steps:
      - name: Cancel Previous Workflows
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Commit
        uses: actions/checkout@v1

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Build ${{ matrix.modifier }} With Gradle
        run: ./gradlew desktop:dist -PclientBuild=${{ github.run_number }} -PupdateUrl=https://api.github.com/repos/${{ github.repository }}/releases/latest -PversionModifier=${{ matrix.modifier }}

      - name: Upload ${{ matrix.assetName }} Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.assetName }}
          path: desktop/build/libs/Mindustry.jar

      - name: Create Release
        if: strategy.job-index == 0
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Foo's Client Build ${{ github.run_number }}
            Steam installation instructions [here](https://github.com/${{ github.repository }}#steam)
          draft: false
          prerelease: false


  createRelease:
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson($releases) }}

    steps:
      - name: Download ${{ matrix.assetName }}
        uses: actions/download-artifact@v2
        id: download
        with:
          name: ${{ matrix.assetName }}

      - name: Upload ${{ matrix.assetName }} to Release
        id: upload-desktop-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.gradleBuild.outputs.url }}
          asset_path: Mindustry.jar
          asset_name: ${{ matrix.assetName }}
          asset_content_type: application/zip
